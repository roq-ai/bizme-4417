generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model application {
  id                 String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cover_letter       String           @db.VarChar(255)
  status             String           @db.VarChar(255)
  job_opportunity_id String?          @db.Uuid
  freelancer_id      String?          @db.Uuid
  created_at         DateTime         @default(now()) @db.Timestamp(6)
  updated_at         DateTime         @default(now()) @db.Timestamp(6)
  user               user?            @relation(fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job_opportunity    job_opportunity? @relation(fields: [job_opportunity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id              String            @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description     String?           @db.VarChar(255)
  image           String?           @db.VarChar(255)
  name            String            @db.VarChar(255)
  created_at      DateTime          @default(now()) @db.Timestamp(6)
  updated_at      DateTime          @default(now()) @db.Timestamp(6)
  user_id         String            @db.Uuid
  tenant_id       String            @db.VarChar(255)
  user            user              @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  job_opportunity job_opportunity[]
}

model job_opportunity {
  id              String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title           String        @db.VarChar(255)
  description     String        @db.VarChar(255)
  skills_required String        @db.VarChar(255)
  company_id      String?       @db.Uuid
  created_at      DateTime      @default(now()) @db.Timestamp(6)
  updated_at      DateTime      @default(now()) @db.Timestamp(6)
  application     application[]
  company         company?      @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String        @unique @db.VarChar(255)
  firstName   String?       @db.VarChar(255)
  lastName    String?       @db.VarChar(255)
  roq_user_id String        @db.VarChar(255)
  tenant_id   String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  application application[]
  company     company[]
}
